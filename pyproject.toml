[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "advent-of-code-data"
version = "2.0.1"
description = "Get your puzzle data with a single import"
requires-python = ">=3.9"
classifiers = [  # https://pypi.org/classifiers/
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Games/Entertainment :: Puzzle Games",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "beautifulsoup4",
    "pebble",
    "urllib3",
    'tzdata ; platform_system == "Windows"',
    "aocd-example-parser >= 2023.2",
]

[[project.authors]]
name = "Wim Glenn"
email = "hey@wimglenn.com"

[project.license]
text = "MIT"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/wimglenn/advent-of-code-data"

[project.optional-dependencies]
all = ["advent-of-code-data[nb,test,type-check]"]
nb = ["IPython", "jupyter-server"]
test = [
    "numpy",
    "pook @ git+https://github.com/wimglenn/pook@urllib3",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-raisin",
    "pytest-freezer",
    "pytest-socket",
    "rich",
]
type-check = ["mypy", "types-beautifulsoup4"]

[project.scripts]
aocd = "aocd.cli:main"
aoc = "aocd.runner:main"
aocd-token = "aocd.cookies:scrape_session_tokens"
aoce = "aocd.examples:main"

[tool.setuptools]
packages = ["aocd"]

[tool.setuptools.package-data]
aocd = ["py.typed"] # include py.typed file in distributions

[project.entry-points]
"adventofcode.user" = {}  # for user solvers
"adventofcode.examples" = {}  # for example-parser implementations

[tool.mypy]
strict = true
allow_redefinition = true
exclude = [
    # TODO: type check tests
    'tests/.*\.py$',  # don't type check tests
]

# ignore missing imports for libraries that do not have type hints available
[[tool.mypy.overrides]]
module = ["browser_cookie3"]
ignore_missing_imports = true
